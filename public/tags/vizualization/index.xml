<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vizualization on Anh Hoang Duc</title>
    <link>/tags/vizualization/</link>
    <description>Recent content in Vizualization on Anh Hoang Duc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Anh Hoang Duc</copyright>
    <lastBuildDate>Fri, 06 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/vizualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review gghighlight</title>
      <link>/blog/review-gghighlight/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/review-gghighlight/</guid>
      <description>I have been watching gghighlight for couple of months as his package addresses one of problems that I very much care about: “Highlighting in ggplot”. Recently, the package has released in CRAN with big improvement since the first version. So, I decided to test this package in some common charts in ggplot2
First, let’s set up some theme to use during the experiment.
#Set up library &amp;amp; themelibrary(dplyr)library(ggplot2)library(gghighlight)my_theme &amp;lt;- function(){list(theme_bw(),scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;),scale_color_brewer(palette = &amp;quot;Set1&amp;quot;))}Highlight bar chartdata &amp;lt;- mtcars %&amp;gt;% mutate(cyl = factor(cyl))data %&amp;gt;% ggplot(aes(cyl, mpg)) +geom_bar(aes(fill = cyl), stat = &amp;quot;identity&amp;quot;) +my_theme() +gghighlight(cyl == 6) +labs(title = &amp;quot;Example 1 - highlight without text&amp;quot;) Highlight bar chart with textdata %&amp;gt;% group_by(cyl) %&amp;gt;% summarise(mpg = sum(mpg)) %&amp;gt;% ggplot(aes(cyl, mpg)) +geom_bar(aes(fill = cyl), stat = &amp;quot;identity&amp;quot;) +geom_text(aes(label = mpg),hjust = -0.</description>
    </item>
    
    <item>
      <title>Create waterfall chart with GGPLOT2</title>
      <link>/blog/create-waterfall-chart-with-ggplot2/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/create-waterfall-chart-with-ggplot2/</guid>
      <description>In digital world, active users is very important metrics but is quite hard to descrile performance of a website/service overtime. Typically, the formula of active user at given time t can be describle as follows:
\[active_{t} = active_{t-1} + new_{t} - churn_{t}\]
Naturally, waterfall chart comes to my mind as an candidate to vizualize performance of active users overtime. So, I tried to look for some real case study using waterfall chart for this very problem using R but I was stuck.</description>
    </item>
    
  </channel>
</rss>