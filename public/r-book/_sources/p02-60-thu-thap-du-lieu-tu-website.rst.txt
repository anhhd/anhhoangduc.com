Thu thập dữ liệu từ website
===========================

rvest
-----

``rvest`` là package cho phép đọc dữ liệu html từ web trong hệ sinh thái
của ``tidyverse``. Sử dụng ``rvest`` cho phép thu thập dữ liệu một cách
nhanh chóng từ web.

Mỗi thành phần của 1 file html được cấu thành từ các ``tag`` và các đối
tượng nhất định được quy định bởi ``css`` của website đó. Khi thu thập
dữ liệu từ web, ta cần biết được chính xác đối tượng ta muốn thu thập dữ
liệu đang được gắn với tag nào của html. Có hai cách để biết được object
thuộc tag nào:

-  Sử dụng ``Chrome >> F12``
-  Sử dụng selectorgadget addin của chrome để xác định node

.. code:: r

   vignette("selectorgadget")

**Ví dụ 1**:

.. code:: r

   url <- 'http://www.imdb.com/search/title?count=100&release_date=2016,2016&title_type=feature'

   webpage <- read_html(url)
   webpage %>% 
     html_nodes(".text-primary") %>% 
     html_text %>% 
     as.numeric

   webpage %>% 
     html_nodes('.lister-item-header a') %>%  
     html_text

   webpage %>% 
     html_nodes('.ratings-bar+ .text-muted') %>%  
     html_text

   webpage %>% 
     html_nodes('table') %>%  
     html_text

**Ví dụ 2**

.. code:: r

   library(rvest)
   lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")

   lego_movie %>%
     html_nodes("table") %>%
     html_table() %>% 
     as.data.frame %>% View

Ứng dụng - Scrape Techcombank ATM
---------------------------------

.. code:: r

   branch_full <- character()
   for (i in 1:4){
   url <- paste0('https://www.techcombank.com.vn/mang-luoi-dia-diem-atm/danh-sach-chi-nhanh-phong-giao-dich-va-atm?page=',i)

   webpage <- read_html(url, encoding = "UTF-8")
   webpage %>% 
     html_nodes(".title-entries a") %>% 
     html_text %>% 
     as.character -> branch
   branch_full <- c(branch_full, branch)
   }
   df <- data.frame(branch = branch_full)
   df %>% DT::datatable()

   library(rvest)
   library(dplyr)
   i <- 1
   url <- paste0('https://www.techcombank.com.vn/mang-luoi-dia-diem-atm/danh-sach-chi-nhanh-phong-giao-dich-va-atm?page=',i)

   webpage <- read_html(iconv(url,  from = "ISO-8859-1", to = "UTF-8"), encoding = "UTF-8")
   webpage <- read_html(url, encoding = "UTF-8")

   webpage <- read_html(iconv(url,  
                             # from = "ISO-8859-1", 
                              to = "UTF-8"), encoding = "utf8")

   webpage %>% 
     html_nodes(".title-entries a") %>% 
     html_text %>% 
     as.character %>% 
     repair_encoding() -> branch
   df <- data.frame(branch = branch)
   df

Sử dụng RSelenium
-----------------

``rvest`` rất thuận tiện trong việc thu thập dữ liệu. Tuy nhiên, khi làm
việc với website, ta phải làm việc cùng lúc với nhiều trag web và tương
tác với các thành phần khác nhau trong website. Ví dụ:

-  Click vào login
-  Nhập mật khẩu
-  Close một cửa sổ

Để giải quyết vấn đề trên, ta cần phải sử dụng ``selenium`` và
``RSelenium``. Các bước sử dụng ``selenium`` và ``RSelenium``:

-  Download `selenium server
   standalone <https://www.seleniumhq.org/download/>`__
-  Donwload `chrome
   driver <http://chromedriver.chromium.org/downloads>`__
-  Sử dụng ``RSelenium`` và điều hướng website

**Cách khởi động server**

-  **Cách 1**: Khởi động server tự động

.. code:: r

   selServ <- selenium(verbose = TRUE) #installs selenium
   selServ$process

-  **Cách 2**: Chạy server thủ công

.. code:: batch

   d:

   cd D:\OneDrive - VPBank\1. Personal projects\Crawl data\selenium

   java -jar selenium-server-standalone-2.47.0.jar -Dwebdriver.chrome.driver=./chromedriver.exe

-  Sử dụng Selenium để điều hướng web

.. code:: r

   #Step 1: Khởi động server
   library(dplyr)
   library(RSelenium)
   remDr <- remoteDriver(remoteServerAddr = "127.0.0.1"
                         , port = 4444
                         , browserName = "chrome")
   remDr$open(silent = F)

   #Gọi website
   remDr$navigate("http://www.facebook.com")
   remDr$navigate("http://vietnamnet.vn/")
   remDr$getCurrentUrl()
   remDr$goBack()
   remDr$goForward()

-  Chèn các đối tượng vào server

.. code:: r

   url <- "http://email-dbs.vpbank.com.vn/admin/index.php"
   remDr$navigate(url)
   #Loại 1: Chèn thông tin
   webElem_1 <- remDr$findElement(using = "css", "[name = 'ss_username']")
   webElem_1$sendKeysToElement(list('Ebank'))
   webElem_2 <- remDr$findElement(using = "css", "[name = 'ss_password']")
   webElem_2$sendKeysToElement(list('NganHangSo@15092016'))
   webElem_3 <- remDr$findElement(using = "css", "[name = 'ss_takemeto']")
   webElem_3$sendKeysToElement(list('My Campaign Statistics'))

   #Loại 2: Chèn click
   webElem_4 <- remDr$findElement(using = "css", "[name = 'SubmitButton']")
   webElem_4$clickElement()

-  Crawl data bằng rvest hoặc save toàn bộ dữ liệu

.. code:: r

   url <- "http://email-dbs.vpbank.com.vn/admin/index.php?Page=Stats&Action=Newsletters&SubAction=ViewSummary&id=763#"
   remDr$navigate(url)

   library(XML)
   html_source <- remDr$getPageSource()[[1]]
   html_parse <- html_source %>% htmlParse
   doc <- readHTMLTable(html_parse)
   doc[[8]] %>% head

**Cách 2**

.. code:: r

   html_source <- remDr$getPageSource()[[1]]
   html_source %>% 
     write.table(file = "my_html.html", 
                              row.names = F,
                              quote = F,
                              col.names = F,
                              fileEncoding = "utf8")
   html_source %>% class
   read_html("my_html.html", encoding = "UTF-8") %>% 
     html_nodes("table") -> my_table
   my_table[[8]] %>% html_table -> pop

Sử dụng SeleniumPipe
--------------------

Bên cạnh ``RSelenium``, ta có thể sử dụng ``SeleniumPipe`` để điều hướng
website sử dụng toán tử ``%>%``

.. code:: r

   remDr <- remoteDr(port = 4444
                         , browserName = "chrome")

   remDr %>% go("http://www.google.com/ncr")

   webElem <- remDr %>% findElement("name", "q")

Tài liệu tham khảo
------------------

-  `RSelenium <https://cran.r-project.org/web/packages/RSelenium/index.html>`__
