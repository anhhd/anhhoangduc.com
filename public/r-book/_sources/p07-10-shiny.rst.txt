Shiny apps
==========

Giới thiệu
----------

Xây dựng Shiny App giúp cho người dùng (end user) dễ dàng hơn trong việc
sử dụng các công cụ *Analytics*

-  Shiny app bao gồm 2 file:

   -  ui.R: Xác định UI của app
   -  server.R: Xác định các câu lệnh để thực hiện trong server

-  2 file của shiny cần đặt cùng trong 1 thư mục

.. code:: r

   library(shiny)
   runExample("01_hello")

Phân tích UI và SERVER
----------------------

UI
~~

.. code:: r

   library(shiny)

   # fluiidPage cho phép tạo UI responsive
   shinyUI(fluidPage(
     
     # Tên ứng dụng
     titlePanel("Ứng dụng đầu tiên của Đức Anh"),
     
     # Sidebar với input dạng slider cho số  bins 
     sidebarLayout(
       sidebarPanel(
         #Input cho bins dạng slider
          sliderInput("bins",           #Tên input
                      "Số lượng bins:", #Title cho input
                      min = 1,
                      max = 50,
                      value = 30),      #Giá trị mặc định
          #Input cho mean dạng nhập số
          numericInput("mean",
                       "Mean value",
                       value = 0),
          #Input cho standard deviation
          numericInput("sd",
                       "Standard deviation",
                       value = 1)
       ),
       
       # main Panel xác định kết quả đầu ra
       mainPanel(
          plotOutput("distPlot")       #Ouput của distPlot
       )
     )
   ))

###SERVER

.. code:: r

   library(shiny)

   # shiny Server được tính bằng hàm của input và ouput
   shinyServer(function(input, output) {
   #distPlot tương ứng với trên UI.R
   #renderPlot trả ra kết quả biểu đồ
     output$distPlot <- renderPlot({
       
       #Tạo vector phân phối chuẩn có mean từ mean của input, sd từ sd của input
       x    <- rnorm(1000, input$mean, input$sd)
       bins <- seq(min(x), max(x), length.out = input$bins + 1)
       
       # Vẽ plot
       hist(x, breaks = bins, col = 'darkgray', border = 'white',
            main = "Biểu đồ phân phối chuẩn")
       })
     
   })

.. _ui-1:

UI
--

-  Tham khảo danh sách widget cho Shiny tại `Shiny widget
   gallery <http://shiny.rstudio.com/gallery/widget-gallery.html>`__

-  Layout của UI có thể tham khảo tại
   `RStudio <http://shiny.rstudio.com/articles/layout-guide.html>`__

Các ứng dụng đơn giản
~~~~~~~~~~~~~~~~~~~~~

-  Nhập text

.. code:: r

   # ui.R

   library(shiny)

   shinyUI(fluidPage(
     titlePanel("Tên ứng dụng cho Shiny"),
     
     sidebarLayout(
       sidebarPanel( h1("Các Input đầu vào"),
                     h5("Giá trị của bins, mean"),
                     numericInput("bins", "Bins", value = 1),
                     sliderInput("mean","Mean", value = 5, min = 1, max = 10)),
       mainPanel("Main Panel trả ra kết quả")
     )
   ))

-  Chèn ảnh:

   -  Cho ảnh vào folder “www” nằm cùng vị trí với UI.R & SERVER.R
   -  Ảnh có thể nằm ở vị trí title, main Panel hoặc Slider Panel trong
      app

.. code:: r

   # ui.R
   library(shiny)

   shinyUI(fluidPage(
     img(src = "logo.png", height = 50, width = 200 ),
     titlePanel("Tên ứng dụng cho Shiny"),
     
     sidebarLayout(
       sidebarPanel( 
                     h1("Các Input đầu vào"),
                     h5("Giá trị của bins, mean"),
                     numericInput("bins", "Bins", value = 1),
                     sliderInput("mean","Mean", value = 5, min = 1, max = 10)),
       mainPanel("Main Panel trả ra kết quả")
     )
   ))

Widget trong Shiny
~~~~~~~~~~~~~~~~~~

Ta có thể thêm widget tương tự như thêm các thành phần của HTML. Widget
cần các thành phần sau:

-  **Tên widget**: Người dùng sẽ không thấy tên này nhưng tên sẽ được sử
   dụng thành các biến về sau.
-  **Label**: Nhãn cho widget, để người dùng dễ theo dõi hơn

.. code:: r

   library(shiny)

   shinyUI(fluidPage(
     img(src = "logo.png", height = 50, width = 200 ),
     titlePanel("Tên ứng dụng cho Shiny"),
     
     sidebarLayout(
       sidebarPanel( 
                     h1("Các Input đầu vào"),
                     numericInput("bins", "Bins", value = 1),
                     sliderInput("mean","Mean", value = 5, min = 1, max = 10),
                     selectInput("value","Value",c("a"= "a", "b" = "b")),
                     fileInput("data", "Import dữ liệu")),
       mainPanel("Main Panel trả ra kết quả")
     )
   ))

###Output trên UI

Để tạo kết quả trên Shiny, cần thực hiện 2 bước:

-  Tạo 1 object trên UI.R
-  Xây dựng object đó trên SERVER.R

Các output thông dụng trên Shiny gồm có:

-  plotOutput
-  tableOutput
-  textOutput

Để hiển thị kết quả của output, cần thực hiện các hàm trả ra kết quả:

-  renderPlot
-  renderText
-  renderTable

Tất cả các giá trị từ widget đều là input và được sử dụng trong phân
tích

.. code:: r

   #ui.r
   library(shiny)

   shinyUI(fluidPage(
     img(src = "logo.png", height = 50, width = 200 ),
     titlePanel("Tên ứng dụng cho Shiny"),
     
     sidebarLayout(
       sidebarPanel( 
                     h1("Các Input đầu vào"),
                     textInput("text", "Text")),
       mainPanel("Kết quả hiển thị với text trong output",
                 textOutput("text1"))
     )
   ))

.. code:: r

   #server.r

   library(shiny)

   # shiny Server được tính bằng hàm của input và ouput
   shinyServer(function(input, output) {
     #distPlot tương ứng với trên UI.R
     #renderPlot trả ra kết quả biểu đồ
     output$text1 <- renderText({
       input$text
     })
     
   })

Bên cạnh đó, ta có thể dùng ``shiny dashboard`` để có giao diện chuyên
nghiệp hơn khi xây dựng ứng dụng.

Case Studies
------------

-  Xem thêm tất cả các ứng dụng đã được xây trong thư mục
   ``shiny dashboard``

Tài liệu tham khảo
------------------

-  Xem thêm shiny
