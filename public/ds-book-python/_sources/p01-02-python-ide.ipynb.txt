{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d70c7677-7faf-4dc9-b60a-6d95094a394d",
   "metadata": {},
   "source": [
    "# Python IDE - Jupyter lab & Visual Studio"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6151a78d",
   "metadata": {},
   "source": [
    "Để làm việc hiệu quả với Python, ta cần làm quen với IDE - Integrated Development Environment - phổ biến cho Python. Có 2 IDE hiệu quả là `Jupyter Lab` và `Visual Studio`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf63feb8-1be8-4b0a-8df9-7590fab2e158",
   "metadata": {},
   "source": [
    "## Jupyter lab"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e29f0566-3a84-4e19-9289-0c1e725b5a81",
   "metadata": {},
   "source": [
    "**Jupyter Lab** là IDE phổ biến nhất cho Python, và là phiên bản nâng cấp của `jupyter notebook`. Jupyter lab sử dụng *browser-based interface*, cho phép chúng ta hiển thị code, hình ảnh, bảng biểu... và viết note bằng Markdown - tương tự như RMarkdown. Tiếp tục với sự phát triển của Jupyeter Notebook là `jupyter lab`.\n",
    "\n",
    "Cách cài đặt jupyter như sau"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74902447-5013-4dda-934b-913f4954aa68",
   "metadata": {},
   "source": [
    "`pip install jupyterlab`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3071e89-6073-46e7-8afe-68232338da5b",
   "metadata": {},
   "source": [
    "---\n",
    "\n",
    "**Các phím tắt hay sử dụng** trong notebook:\n",
    "\n",
    "- `Ctrl + Enter`: Chạy code \n",
    "- `Shift + Enter`: Chạy code & chuyển xuống cell dưới\n",
    "- `Esc + 1`, `Esc + 2`, `Esc + M`, `Esc + R`: Chuyển sang markdown, heading, raw - chức năng hiển thị raw phù hợp khi chèn thêm yaml vào notebook\n",
    "- `Esc + Y`: Chuyển về code \n",
    "- `Esc + X`: Cut code \n",
    "- `Ctrl + /`: Comment/Uncomment \n",
    "- `Alt + Enter`: Chạy code & thêm 1 dòng ở phía dưới \n",
    "- `Shift + Enter`: Chạy code, move xuống dưới 1 dòng - không tạo cell mới\n",
    "- `Alt + Enter`: run cell, insert 1 dòng phía dưới\n",
    "- `Up/ Down`: di chuyển lên xuống\n",
    "- `Esc`: Quay về edit mode\n",
    "- `Esc + A`, `Esc + B`: Insert cell phía trên/ dưới \n",
    "- `Enter`: edit 1 cell\n",
    "- `Esc D+D`: xóa 1 cell (nhớ tắt tiếng Việt)\n",
    "- `Esc + Z`: undo\n",
    "- `Esc + S`: save\n",
    "- `Ctrl + Shift + -`: Tách 1 cell thành 2 cell từ vị trí đặt con trỏ\n",
    "- `Ctrl + Shift + P`: Hiển thị các phím tắt: "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be886cf0-ca72-400c-b772-b75b43e4676a",
   "metadata": {},
   "source": [
    "### Cách hiển thị biểu đồ trong jupyer\n",
    "\n",
    "Sử dụng option `%matplotlib inline` với jupyter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f20d8737-b53e-41d0-941f-da8b25ba60fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 480,
       "width": 640
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# %matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "plt.plot([1,2,3,4])\n",
    "plt.ylabel('some numbers')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60afc8e9-4f49-4ef1-a6bc-365a6938d262",
   "metadata": {},
   "source": [
    "### Magic commands\n",
    "\n",
    "Trong `Python` có nhóm các câu lệnh được khai báo sẵn được gọi là `magic command`. Các câu lệnh này cho phép thực hiện nhanh các nhóm lệnh khác."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bbd3a52f-8b01-4ebf-a023-c2aec24da8fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/json": {
       "cell": {
        "!": "OSMagics",
        "HTML": "Other",
        "SVG": "Other",
        "bash": "Other",
        "capture": "ExecutionMagics",
        "cmd": "Other",
        "code_wrap": "ExecutionMagics",
        "debug": "ExecutionMagics",
        "file": "Other",
        "html": "DisplayMagics",
        "javascript": "DisplayMagics",
        "js": "DisplayMagics",
        "latex": "DisplayMagics",
        "markdown": "DisplayMagics",
        "perl": "Other",
        "prun": "ExecutionMagics",
        "pypy": "Other",
        "python": "Other",
        "python2": "Other",
        "python3": "Other",
        "ruby": "Other",
        "script": "ScriptMagics",
        "sh": "Other",
        "svg": "DisplayMagics",
        "sx": "OSMagics",
        "system": "OSMagics",
        "time": "ExecutionMagics",
        "timeit": "ExecutionMagics",
        "writefile": "OSMagics"
       },
       "line": {
        "alias": "OSMagics",
        "alias_magic": "BasicMagics",
        "autoawait": "AsyncMagics",
        "autocall": "AutoMagics",
        "automagic": "AutoMagics",
        "autosave": "KernelMagics",
        "bookmark": "OSMagics",
        "cd": "OSMagics",
        "clear": "KernelMagics",
        "cls": "KernelMagics",
        "code_wrap": "ExecutionMagics",
        "colors": "BasicMagics",
        "conda": "PackagingMagics",
        "config": "ConfigMagics",
        "connect_info": "KernelMagics",
        "copy": "Other",
        "ddir": "Other",
        "debug": "ExecutionMagics",
        "dhist": "OSMagics",
        "dirs": "OSMagics",
        "doctest_mode": "BasicMagics",
        "echo": "Other",
        "ed": "Other",
        "edit": "KernelMagics",
        "env": "OSMagics",
        "gui": "BasicMagics",
        "hist": "Other",
        "history": "HistoryMagics",
        "killbgscripts": "ScriptMagics",
        "ldir": "Other",
        "less": "KernelMagics",
        "load": "CodeMagics",
        "load_ext": "ExtensionMagics",
        "loadpy": "CodeMagics",
        "logoff": "LoggingMagics",
        "logon": "LoggingMagics",
        "logstart": "LoggingMagics",
        "logstate": "LoggingMagics",
        "logstop": "LoggingMagics",
        "ls": "Other",
        "lsmagic": "BasicMagics",
        "macro": "ExecutionMagics",
        "magic": "BasicMagics",
        "mamba": "PackagingMagics",
        "matplotlib": "PylabMagics",
        "micromamba": "PackagingMagics",
        "mkdir": "Other",
        "more": "KernelMagics",
        "notebook": "BasicMagics",
        "page": "BasicMagics",
        "pastebin": "CodeMagics",
        "pdb": "ExecutionMagics",
        "pdef": "NamespaceMagics",
        "pdoc": "NamespaceMagics",
        "pfile": "NamespaceMagics",
        "pinfo": "NamespaceMagics",
        "pinfo2": "NamespaceMagics",
        "pip": "PackagingMagics",
        "popd": "OSMagics",
        "pprint": "BasicMagics",
        "precision": "BasicMagics",
        "prun": "ExecutionMagics",
        "psearch": "NamespaceMagics",
        "psource": "NamespaceMagics",
        "pushd": "OSMagics",
        "pwd": "OSMagics",
        "pycat": "OSMagics",
        "pylab": "PylabMagics",
        "qtconsole": "KernelMagics",
        "quickref": "BasicMagics",
        "recall": "HistoryMagics",
        "rehashx": "OSMagics",
        "reload_ext": "ExtensionMagics",
        "ren": "Other",
        "rep": "Other",
        "rerun": "HistoryMagics",
        "reset": "NamespaceMagics",
        "reset_selective": "NamespaceMagics",
        "rmdir": "Other",
        "run": "ExecutionMagics",
        "save": "CodeMagics",
        "sc": "OSMagics",
        "set_env": "OSMagics",
        "store": "StoreMagics",
        "sx": "OSMagics",
        "system": "OSMagics",
        "tb": "ExecutionMagics",
        "time": "ExecutionMagics",
        "timeit": "ExecutionMagics",
        "unalias": "OSMagics",
        "unload_ext": "ExtensionMagics",
        "who": "NamespaceMagics",
        "who_ls": "NamespaceMagics",
        "whos": "NamespaceMagics",
        "xdel": "NamespaceMagics",
        "xmode": "BasicMagics"
       }
      },
      "text/plain": [
       "Available line magics:\n",
       "%alias  %alias_magic  %autoawait  %autocall  %automagic  %autosave  %bookmark  %cd  %clear  %cls  %code_wrap  %colors  %conda  %config  %connect_info  %copy  %ddir  %debug  %dhist  %dirs  %doctest_mode  %echo  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %macro  %magic  %mamba  %matplotlib  %micromamba  %mkdir  %more  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %pip  %popd  %pprint  %precision  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %ren  %rep  %rerun  %reset  %reset_selective  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode\n",
       "\n",
       "Available cell magics:\n",
       "%%!  %%HTML  %%SVG  %%bash  %%capture  %%cmd  %%code_wrap  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%markdown  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile\n",
       "\n",
       "Automagic is ON, % prefix IS NOT needed for line magics."
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%lsmagic"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "214756dd-ba0e-4cf8-bba3-84c13e5e717d",
   "metadata": {},
   "source": [
    "Các magic command thường dùng"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f3b7afd6-cdf5-4578-8cfa-791c9059815b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\Users\\\\Hoang Duc Anh'"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Project working directory\n",
    "%pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d36c4b0b-ff2f-4912-8fa7-5079262fbf21",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Hoang Duc Anh\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\Hoang Duc Anh\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\magics\\osm.py:393: UserWarning: using bookmarks requires you to install the `pickleshare` library.\n",
      "c:\\Users\\Hoang Duc Anh\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\magics\\osm.py:428: UserWarning: using dhist requires you to install the `pickleshare` library.\n"
     ]
    }
   ],
   "source": [
    "# Current directory in in Python\n",
    "%cd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6d32fe70-743a-4e96-94ac-caf7ef9ee1bb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Volume in drive C is OS\n",
      " Volume Serial Number is F8BB-E198\n",
      "\n",
      " Directory of C:\\Users\\Hoang Duc Anh\n",
      "\n",
      "05/08/2024  08:20 AM    <DIR>          .\n",
      "04/24/2024  07:57 PM    <DIR>          ..\n",
      "01/06/2023  10:33 PM    <DIR>          .aws\n",
      "11/26/2023  02:49 PM             1,338 .bash_history\n",
      "04/24/2024  07:58 PM    <DIR>          .cache\n",
      "05/26/2023  09:59 PM    <DIR>          .conda\n",
      "01/17/2024  10:41 PM    <DIR>          .eclipse\n",
      "03/04/2023  02:24 PM               188 .gitconfig\n",
      "04/27/2024  08:32 PM    <DIR>          .ipynb_checkpoints\n",
      "05/25/2023  09:54 PM    <DIR>          .ipython\n",
      "11/27/2023  05:11 AM    <DIR>          .jupyter\n",
      "05/25/2023  09:52 PM    <DIR>          .matplotlib\n",
      "09/27/2023  09:52 PM             1,492 .python_history\n",
      "06/03/2023  09:36 PM    <DIR>          .spyder-py3\n",
      "04/14/2023  06:34 AM    <DIR>          .ssh\n",
      "09/08/2023  09:22 PM    <DIR>          .streamlit\n",
      "08/19/2023  05:13 PM    <DIR>          .vscode\n",
      "09/04/2023  09:22 PM    <DIR>          anaconda3\n",
      "08/18/2022  10:24 PM            72,380 battery-report.html\n",
      "09/04/2023  09:54 PM           171,163 benefits.pdf\n",
      "10/01/2022  11:01 PM    <DIR>          Contacts\n",
      "05/08/2024  08:20 AM    <DIR>          Desktop\n",
      "09/06/2023  08:48 PM            24,652 docstore.json\n",
      "05/25/2023  09:41 PM    <DIR>          Documents\n",
      "05/08/2024  04:47 PM    <DIR>          Downloads\n",
      "10/01/2022  11:01 PM    <DIR>          Favorites\n",
      "09/06/2023  08:48 PM                18 graph_store.json\n",
      "09/06/2023  08:48 PM               667 index_store.json\n",
      "10/01/2022  11:01 PM    <DIR>          Links\n",
      "10/01/2022  11:01 PM    <DIR>          Music\n",
      "04/10/2022  04:00 PM    <DIR>          OneDrive\n",
      "10/01/2022  11:01 PM    <DIR>          Pictures\n",
      "10/01/2022  11:01 PM    <DIR>          Saved Games\n",
      "02/08/2023  10:18 AM    <DIR>          Searches\n",
      "04/27/2024  04:53 PM            10,454 Untitled.ipynb\n",
      "04/28/2024  07:17 AM           957,036 Untitled1.ipynb\n",
      "04/27/2024  08:44 PM             5,728 Untitled2.ipynb\n",
      "09/06/2023  08:48 PM           172,587 vector_store.json\n",
      "04/26/2024  08:15 PM    <DIR>          Videos\n",
      "              12 File(s)      1,417,703 bytes\n",
      "              27 Dir(s)  34,724,528,128 bytes free\n"
     ]
    }
   ],
   "source": [
    "%ls"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bad69175-419b-4439-8fc1-973911cac510",
   "metadata": {},
   "source": [
    "### Viết công thức toán \n",
    "\n",
    "Ta có thể viết công thức toán như rmarkdown thông thường.\n",
    "\n",
    "Ví dụ: Kết quả hiển thị của công thức `$$\\theta = \\sum_{i=1}^{n}X_{i}$$` như sau\n",
    "\n",
    "$$\\theta = \\sum_{i=1}^{n}X_{i}$$\n",
    "\n",
    "### Cài đặt extension cho phép quản lý jupyter tốt hơn\n",
    "\n",
    "`conda install -c conda-forge jupyter_contrib_nbextensions jupyter_nbextensions_configurator`\n",
    "`pip install jupyter_contrib_nbextensions jupyter_nbextensions_configurator`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4ece0ef",
   "metadata": {},
   "source": [
    "## Visual Studio"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6a7d3d8",
   "metadata": {},
   "source": [
    "Bên cạnh Jupyter Lab, ta có thể sử dụng Visual Studio làm IDE cho Python. Download Visual Studio tại đường link dưới đây\n",
    "\n",
    "[https://code.visualstudio.com/download](https://code.visualstudio.com/download)\n",
    "\n",
    "Visual Studio cho phép cài đặt rất nhiều công cụ bổ trợ (`extension`) để thực hiện phân tích dữ liệu với Python. Giao diện của Visual Studio như sau"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdb2ddc1",
   "metadata": {},
   "source": [
    "![](Image/p01-02-visual-studio.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bcc1c81",
   "metadata": {},
   "source": [
    "Trong cấu trúc của Visual Studio, có các cấu phần quan trọng sau:\n",
    "\n",
    "- `Explorer`: \n",
    "    - `Tên folder đang làm việc`: Hiển thị các file trong thư mục gốc\n",
    "    - `Outline`: TOC của file notebook đang làm việc\n",
    "- `Notebook`: Phần làm việc với notebook chính\n",
    "- `Variables`: Cho phép hiển thị các chức năng mở rộng trong notebook/file .py:\n",
    "    - `Terminal`: Cho phép sử dụng như console với interactive coding\n",
    "    - `Jupyter`: Cho phép hiển thị các variables, objects trong notebook\n",
    "\n",
    "**Lưu ý**: Các module, function khi load từ python cũng sẽ được hiển thị tại đây"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "273bbfbd",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72377c45",
   "metadata": {},
   "source": [
    "**Các tips khi sử dụng Visual Studio**:\n",
    "\n",
    "- `# %%%`: Cho phép chạy code tương tự như các cell trong notebook (nên dùng). Khi sử dụng cách này, các file `.py` có thể tương tác và sử dụng dễ dàng thay vì phải chọn và chạy bằng phím `Shift + Enter`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "464e7793",
   "metadata": {},
   "source": [
    "## Các thư viện khác"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25a88538-e125-4152-a6e2-a619e770ad3c",
   "metadata": {},
   "source": [
    "### Quarto"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a15bddc2-87c5-49de-a933-f660235fe9ef",
   "metadata": {},
   "source": [
    "Tương tự như R, quarto có thể sử dụng cùng `.ipynb`. Khi đặt heading của quarto phần đầu của notebook, ta chọn cell ở chế độ `raw`"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "c5a21594-c386-4b9b-9550-e855ea55aed6",
   "metadata": {},
   "source": [
    "![](Image/p02-quarto.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d464fa5-1943-4228-955b-e1cb9db798d4",
   "metadata": {},
   "source": [
    "Để export file `.ipynb` thành html, ta dùng cmd như sau\n",
    "\n",
    "`quarto render notebook.ipynb`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ac08544-251f-47fe-b0d1-4018086f7057",
   "metadata": {},
   "source": [
    "Kết quả render ra file html như sau"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "5406b3b9-0cfb-4d01-8758-42d874b0c16d",
   "metadata": {},
   "source": [
    "![](Image/p02-quarto-example.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be11ecaf-d10e-4bc2-b735-8c7d96ac1763",
   "metadata": {},
   "source": [
    "---\n",
    "\n",
    "Như vậy, khi ta dùng kết hợp notebook và export ra quarto, ta có thể sử dụng đồng nhất kết quả đầu ra của cả 2 ngôn ngữ R & Python"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5065e441-cc44-45d6-be48-119b30f50d30",
   "metadata": {},
   "source": [
    "### Sphinx"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "749c76f1-328a-48f4-a9b7-44c52749de5c",
   "metadata": {},
   "source": [
    "Mặc dù `jupyter notebook` là công cụ hữu hiệu để phân tích dữ liệu với Python, `jupyter` lại chưa phải là công cụ hữu hiệu để viết lại các document thành hệ thống. Để viết hiệu quả, ta cần dùng `sphinx`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9faf46dd-c5df-4ccc-9713-e42ceb12ddd1",
   "metadata": {},
   "source": [
    "```python\n",
    "# Cài đặt sphinx\n",
    "pip install sphinx\n",
    "\n",
    "# Cài đặt template\n",
    "pip install sphinx_rtd_theme\n",
    "\n",
    "# Cài đặt notebook for sphinx\n",
    "pip install nbsphinx\n",
    "conda install -c conda-forge nbsphinx\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7783955e-f2db-4d10-8b97-c75af8b6e086",
   "metadata": {},
   "source": [
    "---\n",
    "\n",
    "Sau khi cài đặt xong, ta có thể tạo 1 project mới như sau"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ba73c29-a1ef-4970-b31a-9d935ef7a7ee",
   "metadata": {},
   "source": [
    "```cmd\n",
    "sphinx-quickstart\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ef2e9c3-7005-4b3a-b838-99505f932b73",
   "metadata": {},
   "source": [
    "Các file notebook cần được liệt kê trong file `index.rst`\n",
    "\n",
    "Sau khi set-up xong, toàn ta có thể run toàn bộ project như sau"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7135568-a9eb-4657-a61a-ad0a29d6236d",
   "metadata": {},
   "source": [
    "```bash\n",
    "sphinx-build source_foder output_folder\n",
    "sphinx-build _source _build/html\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6847460b",
   "metadata": {},
   "source": [
    "### RStudio"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e48296e8",
   "metadata": {},
   "source": [
    "Rstudio cũng có thể được sử dụng làm IDE của python tương tự như R. \n",
    "Ta chỉ cần cài đặt thư viện `reticulate` trong R. Khi đó, khi khởi tạo file `py`, `qmd`, Rstudio có thể dùng như là một IDE bình thường.\n",
    "\n",
    "**Lưu ý**: Hiện tại, Rstudio đang có hạn chế hiển thị ảnh chất lượng cao trong Python"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d62d67c6",
   "metadata": {},
   "source": [
    "![](Image/p01-02-rstudio.gif)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f862905-805a-4ab1-837d-4adb4d79f850",
   "metadata": {},
   "source": [
    "## Tài liệu tham khảo"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "371591a5-cf0c-42d4-9f87-0b522f4c8a52",
   "metadata": {},
   "source": [
    "- [https://jupyterlab.readthedocs.io/en/stable/getting_started/installation.html]()\n",
    "- [https://nbsphinx.readthedocs.io/en/0.4.2/installation.html]()\n",
    "- [https://sphinx-rtd-theme.readthedocs.io/en/stable/installing.html]()\n",
    "- [https://posit.co/blog/three-ways-to-program-in-python-with-rstudio/]()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
