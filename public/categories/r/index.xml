<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Anh Hoang Duc</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Anh Hoang Duc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Anh Hoang Duc</copyright>
    <lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Create waterfall chart with GGPLOT2</title>
      <link>/post/create-waterfall-chart-with-ggplot2/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/create-waterfall-chart-with-ggplot2/</guid>
      <description>In digital world, active users is very important metrics but is quite hard to descrile performance of a website/service overtime. Typically, the formula of active user at given time t can be describle as follows:
\[active_{t} = active_{t-1} + new_{t} - churn_{t}\]
Naturally, waterfall chart comes to my mind as an candidate to vizualize performance of active users overtime. So, I tried to look for some real case study using waterfall chart for this very problem using R but I was stuck.</description>
    </item>
    
    <item>
      <title>Install R packages from Github through proxy</title>
      <link>/post/install-r-packages-from-github-through-proxy/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/install-r-packages-from-github-through-proxy/</guid>
      <description>The easiest way to install an R package is from R-Cran. However, as the number of R users is growing up very fast, many developers are contribute to R community through Github. And the standard way to install from Github is to use devtools package with install_github() command.
In many organization, especially financial organization like banking industry, sometimes it is very hard to install an R package from CRAN or Github due to security process.</description>
    </item>
    
    <item>
      <title>How to manage libraries in R efficiently?</title>
      <link>/post/how-to-manage-libraries-in-r-efficiently/</link>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/how-to-manage-libraries-in-r-efficiently/</guid>
      <description>When starting using with R, installing and managing R libraries seems not to be a difficult task at all. However, when updating R to new version, it will make some problems. For most cases, you have to re-install your library, which takes much time.
There is another tricky way to solve that problem, which is to copy all your old libraries to the new library folder. For example, all your libraries in R version 3.</description>
    </item>
    
  </channel>
</rss>